def label = "worker-${UUID.randomUUID().toString()}"

podTemplate(label: label, containers: [
    containerTemplate(name: 'maven', image: 'maven:3.6.1-jdk-11-slim', command: 'cat', ttyEnabled: true),
    containerTemplate(name: 'kaniko', image: 'gcr.io/kaniko-project/executor:debug-v0.13.0', command: 'cat', ttyEnabled: true),
    containerTemplate(name: 'deploy-tools', image: 'kbristow/deploy-tools:0.0.1', command: 'cat', ttyEnabled: true),
], 
volumes: [
    persistentVolumeClaim(claimName: 'maven-cache', mountPath: '/root/.m2cache'),
    secretVolume(mountPath: '/docker/auth/', secretName: 'regcred')
],
serviceAccount: "jenkins"
){
    node(label) {
        def myRepo = checkout scm
        def gitCommit = myRepo.GIT_COMMIT
        def gitBranch = myRepo.GIT_BRANCH
        def shortGitCommit = "${gitCommit[0..10]}"

        stage('Deploy') {
            container('deploy-tools') {
                sh "helm upgrade kube-jenkins-test ./charts --namespace=jenkins --set image.tag=1e49658de70"
                sh "./deployer.py --namespace=jenkins --deployment_name=kube-jenkins-test-maven"
            }
        }

        stage('Build') {
            container('maven') {
                sh "mvn -Dmaven.repo.local=/root/.m2cache install"
            }
        }

        stage('Test') {
            container('maven') {
                sh "mvn -Dmaven.repo.local=/root/.m2cache test"
            }
        }

        stage('Package') {
            container('kaniko') {
                sh "cp /docker/auth/.dockerconfigjson /kaniko/.docker/config.json"
                sh "executor --skip-tls-verify --context=\$(pwd) --dockerfile=Dockerfile --destination=kbristow/kube-jenkins-test:${shortGitCommit}"
            }
        }
    }
}
